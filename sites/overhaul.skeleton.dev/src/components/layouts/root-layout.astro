---
import '@/app.css';
import { SEO } from 'astro-seo';
import Favicon from '@/assets/favicon.png';
import Skeleton from '@/assets/branding/skeleton.png';
import { ClientRouter } from 'astro:transitions';

interface Props {
	title?: string;
	description?: string;
}

const DEFAULT_TITLE = 'Skeleton';
const DEFAULT_DESCRIPTION = 'Documentation for Skeleton, the UI toolkit for building high-quality web applications.';

const { title = DEFAULT_TITLE, description = DEFAULT_DESCRIPTION } = Astro.props;
---

<html lang="en" transition:animate="none">
	<head>
		<SEO
			title={title}
			description={description}
			canonical={Astro.site}
			charset="UTF-8"
			openGraph={{
				basic: {
					title: title,
					type: 'website',
					url: Astro.site,
					image: Skeleton.src,
				},
				image: {
					url: Skeleton.src,
					secureUrl: Skeleton.src,
					type: `image/${Skeleton.format}`,
					width: Skeleton.width,
					height: Skeleton.height,
					alt: 'Skeleton',
				},
				optional: {
					locale: 'en_US',
					siteName: 'Skeleton',
					description: description,
				},
			}}
			twitter={{
				title: title,
				description: description,
				image: Skeleton.src,
				imageAlt: 'Skeleton',
				site: Astro.site?.toString(),
			}}
			extend={{
				meta: [
					{
						name: 'viewport',
						content: 'width=device-width, initial-scale=1',
					},
					{
						name: 'generator',
						content: Astro.generator,
					},
				],
				link: [
					{
						rel: 'icon',
						type: `image/${Favicon.format}`,
						href: Favicon.src,
					},
					{
						rel: 'sitemap',
						href: '/sitemap-index.xml',
					},
				],
			}}
		/>
		<script defer is:inline data-astro-rerun>
			function initializeMode() {
				const DEFAULT_MODE = 'dark';
				const storedMode = localStorage.getItem('mode');
				const preferredMode = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
				const mode = storedMode ?? preferredMode ?? DEFAULT_MODE;
				document.documentElement.setAttribute('data-mode', mode);
			}
			function initializeTheme() {
				const DEFAULT_THEME = 'cerberus';
				const storedTheme = localStorage.getItem('theme');
				const theme = storedTheme ?? DEFAULT_THEME;
				document.documentElement.setAttribute('data-theme', theme);
			}

			initializeMode();
			initializeTheme();
		</script>
		<ClientRouter />
	</head>
	<body>
		<main>
			<slot />
		</main>
	</body>
</html>
