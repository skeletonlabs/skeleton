[
    {
        "name": "PopoverProps",
        "properties": [
            {
                "name": "zIndex",
                "type": "string",
                "typeKind": "primitive",
                "required": false,
                "documentation": {
                    "text": "Set a positioner style for z-index, ex: \"10\"",
                    "tags": []
                }
            },
            {
                "name": "arrow",
                "type": "boolean",
                "typeKind": "primitive",
                "required": false,
                "documentation": {
                    "text": "Enable display of the popover arrow.",
                    "tags": []
                }
            },
            {
                "name": "arrowBackground",
                "type": "string",
                "typeKind": "primitive",
                "required": false,
                "documentation": {
                    "text": "Set a style value for --arrow-background, ex: \"var(--color-surface-50-950)\"",
                    "tags": []
                }
            },
            {
                "name": "arrowSize",
                "type": "string",
                "typeKind": "primitive",
                "required": false,
                "documentation": {
                    "text": "Set a style value for --arrow-size, ex: \"10px\"",
                    "tags": []
                }
            },
            {
                "name": "base",
                "type": "string",
                "typeKind": "primitive",
                "required": false,
                "documentation": {
                    "text": "Set base classes for the root element.",
                    "tags": []
                }
            },
            {
                "name": "classes",
                "type": "string",
                "typeKind": "primitive",
                "required": false,
                "documentation": {
                    "text": "Provide arbitrary classes for the root element.",
                    "tags": []
                }
            },
            {
                "name": "triggerBase",
                "type": "string",
                "typeKind": "primitive",
                "required": false,
                "documentation": {
                    "text": "Set base classes for the trigger.",
                    "tags": []
                }
            },
            {
                "name": "triggerBackground",
                "type": "string",
                "typeKind": "primitive",
                "required": false,
                "documentation": {
                    "text": "Set background classes for the trigger.",
                    "tags": []
                }
            },
            {
                "name": "triggerClasses",
                "type": "string",
                "typeKind": "primitive",
                "required": false,
                "documentation": {
                    "text": "Provide arbitrary classes for the trigger.",
                    "tags": []
                }
            },
            {
                "name": "triggerAriaLabel",
                "type": "string",
                "typeKind": "primitive",
                "required": false,
                "documentation": {
                    "text": "Set the aria-label for the trigger.",
                    "tags": []
                }
            },
            {
                "name": "positionerBase",
                "type": "string",
                "typeKind": "primitive",
                "required": false,
                "documentation": {
                    "text": "Set base classes for the positioner.",
                    "tags": []
                }
            },
            {
                "name": "positionerClasses",
                "type": "string",
                "typeKind": "primitive",
                "required": false,
                "documentation": {
                    "text": "Provide arbitrary classes for the positioner.",
                    "tags": []
                }
            },
            {
                "name": "contentBase",
                "type": "string",
                "typeKind": "primitive",
                "required": false,
                "documentation": {
                    "text": "Set base classes for the content.",
                    "tags": []
                }
            },
            {
                "name": "contentBackground",
                "type": "string",
                "typeKind": "primitive",
                "required": false,
                "documentation": {
                    "text": "Set background classes for the content.",
                    "tags": []
                }
            },
            {
                "name": "contentClasses",
                "type": "string",
                "typeKind": "primitive",
                "required": false,
                "documentation": {
                    "text": "Provide arbitrary classes for the content.",
                    "tags": []
                }
            },
            {
                "name": "arrowBase",
                "type": "string",
                "typeKind": "primitive",
                "required": false,
                "documentation": {
                    "text": "Set base classes for the arrow.",
                    "tags": []
                }
            },
            {
                "name": "arrowClasses",
                "type": "string",
                "typeKind": "primitive",
                "required": false,
                "documentation": {
                    "text": "Provide arbitrary classes for the arrow.",
                    "tags": []
                }
            },
            {
                "name": "trigger",
                "type": "Snippet<[]>",
                "typeKind": "primitive",
                "required": false,
                "documentation": {
                    "text": "Provide the template contents inside the trigger button.",
                    "tags": []
                }
            },
            {
                "name": "content",
                "type": "Snippet<[]>",
                "typeKind": "primitive",
                "required": false,
                "documentation": {
                    "text": "Provide the template contents of the popover itself.",
                    "tags": []
                }
            },
            {
                "name": "onclick",
                "type": "MouseEventHandler<HTMLButtonElement>",
                "typeKind": "function",
                "required": false,
                "documentation": {
                    "text": "Handle the popover button click event.",
                    "tags": []
                }
            },
            {
                "name": "ids",
                "type": "Partial<{ anchor: string; trigger: string; content: string; title: string; description: string; closeTrigger: string; positioner: string; arrow: string; }>",
                "typeKind": "object",
                "required": false,
                "documentation": {
                    "text": "The ids of the elements in the popover. Useful for composition.",
                    "tags": []
                }
            },
            {
                "name": "dir",
                "type": "\"ltr\" | \"rtl\"",
                "typeKind": "primitive",
                "required": false,
                "documentation": {
                    "text": "The document's text/writing direction.",
                    "tags": [
                        {
                            "name": "default",
                            "value": "\"ltr\""
                        }
                    ]
                }
            },
            {
                "name": "getRootNode",
                "type": "() => ShadowRoot | Node | Document",
                "typeKind": "function",
                "required": false,
                "documentation": {
                    "text": "A root node to correctly resolve document in custom environments. E.x.: Iframes, Electron.",
                    "tags": []
                }
            },
            {
                "name": "autoFocus",
                "type": "boolean",
                "typeKind": "primitive",
                "required": false,
                "documentation": {
                    "text": "Whether to automatically set focus on the first focusable\ncontent within the popover when opened.",
                    "tags": [
                        {
                            "name": "default",
                            "value": "true"
                        }
                    ]
                }
            },
            {
                "name": "onPointerDownOutside",
                "type": "(event: PointerDownOutsideEvent) => void",
                "typeKind": "function",
                "required": false,
                "documentation": {
                    "text": "Function called when the pointer is pressed down outside the component",
                    "tags": []
                }
            },
            {
                "name": "onFocusOutside",
                "type": "(event: FocusOutsideEvent) => void",
                "typeKind": "function",
                "required": false,
                "documentation": {
                    "text": "Function called when the focus is moved outside the component",
                    "tags": []
                }
            },
            {
                "name": "onInteractOutside",
                "type": "(event: InteractOutsideEvent) => void",
                "typeKind": "function",
                "required": false,
                "documentation": {
                    "text": "Function called when an interaction happens outside the component",
                    "tags": []
                }
            },
            {
                "name": "open",
                "type": "boolean",
                "typeKind": "primitive",
                "required": false,
                "documentation": {
                    "text": "The controlled open state of the popover",
                    "tags": []
                }
            },
            {
                "name": "defaultOpen",
                "type": "boolean",
                "typeKind": "primitive",
                "required": false,
                "documentation": {
                    "text": "The initial open state of the popover when rendered.\nUse when you don't need to control the open state of the popover.",
                    "tags": []
                }
            },
            {
                "name": "positioning",
                "type": "PositioningOptions",
                "typeKind": "object",
                "required": false,
                "documentation": {
                    "text": "The user provided options used to position the popover content",
                    "tags": []
                }
            },
            {
                "name": "onOpenChange",
                "type": "(details: OpenChangeDetails) => void",
                "typeKind": "function",
                "required": false,
                "documentation": {
                    "text": "Function invoked when the popover opens or closes",
                    "tags": []
                }
            },
            {
                "name": "modal",
                "type": "boolean",
                "typeKind": "primitive",
                "required": false,
                "documentation": {
                    "text": "Whether the popover should be modal. When set to `true`:\n- interaction with outside elements will be disabled\n- only popover content will be visible to screen readers\n- scrolling is blocked\n- focus is trapped within the popover",
                    "tags": [
                        {
                            "name": "default",
                            "value": "false"
                        }
                    ]
                }
            },
            {
                "name": "initialFocusEl",
                "type": "() => HTMLElement",
                "typeKind": "function",
                "required": false,
                "documentation": {
                    "text": "The element to focus on when the popover is opened.",
                    "tags": []
                }
            },
            {
                "name": "closeOnInteractOutside",
                "type": "boolean",
                "typeKind": "primitive",
                "required": false,
                "documentation": {
                    "text": "Whether to close the popover when the user clicks outside of the popover.",
                    "tags": [
                        {
                            "name": "default",
                            "value": "true"
                        }
                    ]
                }
            },
            {
                "name": "closeOnEscape",
                "type": "boolean",
                "typeKind": "primitive",
                "required": false,
                "documentation": {
                    "text": "Whether to close the popover when the escape key is pressed.",
                    "tags": [
                        {
                            "name": "default",
                            "value": "true"
                        }
                    ]
                }
            },
            {
                "name": "onEscapeKeyDown",
                "type": "(event: KeyboardEvent) => void",
                "typeKind": "function",
                "required": false,
                "documentation": {
                    "text": "Function called when the escape key is pressed",
                    "tags": []
                }
            },
            {
                "name": "persistentElements",
                "type": "(() => Element)[]",
                "typeKind": "array",
                "required": false,
                "documentation": {
                    "text": "Returns the persistent elements that:\n- should not have pointer-events disabled\n- should not trigger the dismiss event",
                    "tags": []
                }
            },
            {
                "name": "portalled",
                "type": "boolean",
                "typeKind": "primitive",
                "required": false,
                "documentation": {
                    "text": "Whether the popover is portalled. This will proxy the tabbing behavior regardless of the DOM position\nof the popover content.",
                    "tags": [
                        {
                            "name": "default",
                            "value": "true"
                        }
                    ]
                }
            }
        ]
    }
]