[
    {
        "name": "ModalProps",
        "properties": [
            {
                "name": "base",
                "type": "string",
                "typeKind": "primitive",
                "required": false,
                "documentation": {
                    "text": "Set base classes for the root element.",
                    "tags": []
                }
            },
            {
                "name": "classes",
                "type": "string",
                "typeKind": "primitive",
                "required": false,
                "documentation": {
                    "text": "Provide arbitrary classes for the root element.",
                    "tags": []
                }
            },
            {
                "name": "zIndex",
                "type": "string",
                "typeKind": "primitive",
                "required": false,
                "documentation": {
                    "text": "Set a positioner style for z-index, ex: \"10\"",
                    "tags": []
                }
            },
            {
                "name": "triggerBase",
                "type": "string",
                "typeKind": "primitive",
                "required": false,
                "documentation": {
                    "text": "Set base classes for the trigger.",
                    "tags": []
                }
            },
            {
                "name": "triggerBackground",
                "type": "string",
                "typeKind": "primitive",
                "required": false,
                "documentation": {
                    "text": "Set background classes for the trigger.",
                    "tags": []
                }
            },
            {
                "name": "triggerClasses",
                "type": "string",
                "typeKind": "primitive",
                "required": false,
                "documentation": {
                    "text": "Provide arbitrary classes for the trigger.",
                    "tags": []
                }
            },
            {
                "name": "triggerAriaLabel",
                "type": "string",
                "typeKind": "primitive",
                "required": false,
                "documentation": {
                    "text": "Set the aria-label for the trigger.",
                    "tags": []
                }
            },
            {
                "name": "backdropBase",
                "type": "string",
                "typeKind": "primitive",
                "required": false,
                "documentation": {
                    "text": "Set base classes for the backdrop.",
                    "tags": []
                }
            },
            {
                "name": "backdropBackground",
                "type": "string",
                "typeKind": "primitive",
                "required": false,
                "documentation": {
                    "text": "Set background classes for the backdrop.",
                    "tags": []
                }
            },
            {
                "name": "backdropClasses",
                "type": "string",
                "typeKind": "primitive",
                "required": false,
                "documentation": {
                    "text": "Provide arbitrary classes for the backdrop.",
                    "tags": []
                }
            },
            {
                "name": "positionerBase",
                "type": "string",
                "typeKind": "primitive",
                "required": false,
                "documentation": {
                    "text": "Set base classes for the positioner.",
                    "tags": []
                }
            },
            {
                "name": "positionerDisplay",
                "type": "string",
                "typeKind": "primitive",
                "required": false,
                "documentation": {
                    "text": "Set display classes for the positioner.",
                    "tags": []
                }
            },
            {
                "name": "positionerJustify",
                "type": "string",
                "typeKind": "primitive",
                "required": false,
                "documentation": {
                    "text": "Set justify classes for the positioner.",
                    "tags": []
                }
            },
            {
                "name": "positionerAlign",
                "type": "string",
                "typeKind": "primitive",
                "required": false,
                "documentation": {
                    "text": "Set align classes for the positioner.",
                    "tags": []
                }
            },
            {
                "name": "positionerPadding",
                "type": "string",
                "typeKind": "primitive",
                "required": false,
                "documentation": {
                    "text": "Set padding classes for the positioner.",
                    "tags": []
                }
            },
            {
                "name": "positionerClasses",
                "type": "string",
                "typeKind": "primitive",
                "required": false,
                "documentation": {
                    "text": "Provide arbitrary classes for the positioner.",
                    "tags": []
                }
            },
            {
                "name": "contentBase",
                "type": "string",
                "typeKind": "primitive",
                "required": false,
                "documentation": {
                    "text": "Set base classes for the content.",
                    "tags": []
                }
            },
            {
                "name": "contentBackground",
                "type": "string",
                "typeKind": "primitive",
                "required": false,
                "documentation": {
                    "text": "Set background classes for the content.",
                    "tags": []
                }
            },
            {
                "name": "contentClasses",
                "type": "string",
                "typeKind": "primitive",
                "required": false,
                "documentation": {
                    "text": "Provide arbitrary classes for the content.",
                    "tags": []
                }
            },
            {
                "name": "transitionsBackdropIn",
                "type": "FadeParams",
                "typeKind": "object",
                "required": false,
                "documentation": {
                    "text": "Provide transition for backdrop in",
                    "tags": []
                }
            },
            {
                "name": "transitionsBackdropOut",
                "type": "FadeParams",
                "typeKind": "object",
                "required": false,
                "documentation": {
                    "text": "Provide transition for backdrop out",
                    "tags": []
                }
            },
            {
                "name": "transitionsPositionerIn",
                "type": "FlyParams",
                "typeKind": "object",
                "required": false,
                "documentation": {
                    "text": "Provide transition for dialog in",
                    "tags": []
                }
            },
            {
                "name": "transitionsPositionerOut",
                "type": "FlyParams",
                "typeKind": "object",
                "required": false,
                "documentation": {
                    "text": "Provide transition for dialog out",
                    "tags": []
                }
            },
            {
                "name": "trigger",
                "type": "Snippet<[]>",
                "typeKind": "primitive",
                "required": false,
                "documentation": {
                    "text": "Provide the template contents inside the trigger button.",
                    "tags": []
                }
            },
            {
                "name": "content",
                "type": "Snippet<[]>",
                "typeKind": "primitive",
                "required": false,
                "documentation": {
                    "text": "Provide the template contents of the dialog itself.",
                    "tags": []
                }
            },
            {
                "name": "onclick",
                "type": "MouseEventHandler<HTMLButtonElement>",
                "typeKind": "function",
                "required": false,
                "documentation": {
                    "text": "Handle the dialog button click event.",
                    "tags": []
                }
            },
            {
                "name": "ids",
                "type": "Partial<{ trigger: string; positioner: string; backdrop: string; content: string; closeTrigger: string; title: string; description: string; }>",
                "typeKind": "object",
                "required": false,
                "documentation": {
                    "text": "The ids of the elements in the dialog. Useful for composition.",
                    "tags": []
                }
            },
            {
                "name": "dir",
                "type": "\"ltr\" | \"rtl\"",
                "typeKind": "primitive",
                "required": false,
                "documentation": {
                    "text": "The document's text/writing direction.",
                    "tags": [
                        {
                            "name": "default",
                            "value": "\"ltr\""
                        }
                    ]
                }
            },
            {
                "name": "getRootNode",
                "type": "() => ShadowRoot | Node | Document",
                "typeKind": "function",
                "required": false,
                "documentation": {
                    "text": "A root node to correctly resolve document in custom environments. E.x.: Iframes, Electron.",
                    "tags": []
                }
            },
            {
                "name": "aria-label",
                "type": "string",
                "typeKind": "primitive",
                "required": false,
                "documentation": {
                    "text": "Human readable label for the dialog, in event the dialog title is not rendered",
                    "tags": []
                }
            },
            {
                "name": "onPointerDownOutside",
                "type": "(event: PointerDownOutsideEvent) => void",
                "typeKind": "function",
                "required": false,
                "documentation": {
                    "text": "Function called when the pointer is pressed down outside the component",
                    "tags": []
                }
            },
            {
                "name": "onFocusOutside",
                "type": "(event: FocusOutsideEvent) => void",
                "typeKind": "function",
                "required": false,
                "documentation": {
                    "text": "Function called when the focus is moved outside the component",
                    "tags": []
                }
            },
            {
                "name": "onInteractOutside",
                "type": "(event: InteractOutsideEvent) => void",
                "typeKind": "function",
                "required": false,
                "documentation": {
                    "text": "Function called when an interaction happens outside the component",
                    "tags": []
                }
            },
            {
                "name": "open",
                "type": "boolean",
                "typeKind": "primitive",
                "required": false,
                "documentation": {
                    "text": "The controlled open state of the dialog",
                    "tags": []
                }
            },
            {
                "name": "defaultOpen",
                "type": "boolean",
                "typeKind": "primitive",
                "required": false,
                "documentation": {
                    "text": "The initial open state of the dialog when rendered.\nUse when you don't need to control the open state of the dialog.",
                    "tags": [
                        {
                            "name": "default",
                            "value": "false"
                        }
                    ]
                }
            },
            {
                "name": "onOpenChange",
                "type": "(details: OpenChangeDetails) => void",
                "typeKind": "function",
                "required": false,
                "documentation": {
                    "text": "Function to call when the dialog's open state changes",
                    "tags": []
                }
            },
            {
                "name": "trapFocus",
                "type": "boolean",
                "typeKind": "primitive",
                "required": false,
                "documentation": {
                    "text": "Whether to trap focus inside the dialog when it's opened",
                    "tags": [
                        {
                            "name": "default",
                            "value": "true"
                        }
                    ]
                }
            },
            {
                "name": "preventScroll",
                "type": "boolean",
                "typeKind": "primitive",
                "required": false,
                "documentation": {
                    "text": "Whether to prevent scrolling behind the dialog when it's opened",
                    "tags": [
                        {
                            "name": "default",
                            "value": "true"
                        }
                    ]
                }
            },
            {
                "name": "modal",
                "type": "boolean",
                "typeKind": "primitive",
                "required": false,
                "documentation": {
                    "text": "Whether to prevent pointer interaction outside the element and hide all content below it",
                    "tags": [
                        {
                            "name": "default",
                            "value": "true"
                        }
                    ]
                }
            },
            {
                "name": "initialFocusEl",
                "type": "() => HTMLElement",
                "typeKind": "function",
                "required": false,
                "documentation": {
                    "text": "Element to receive focus when the dialog is opened",
                    "tags": []
                }
            },
            {
                "name": "finalFocusEl",
                "type": "() => HTMLElement",
                "typeKind": "function",
                "required": false,
                "documentation": {
                    "text": "Element to receive focus when the dialog is closed",
                    "tags": []
                }
            },
            {
                "name": "restoreFocus",
                "type": "boolean",
                "typeKind": "primitive",
                "required": false,
                "documentation": {
                    "text": "Whether to restore focus to the element that had focus before the dialog was opened",
                    "tags": []
                }
            },
            {
                "name": "closeOnInteractOutside",
                "type": "boolean",
                "typeKind": "primitive",
                "required": false,
                "documentation": {
                    "text": "Whether to close the dialog when the outside is clicked",
                    "tags": [
                        {
                            "name": "default",
                            "value": "true"
                        }
                    ]
                }
            },
            {
                "name": "closeOnEscape",
                "type": "boolean",
                "typeKind": "primitive",
                "required": false,
                "documentation": {
                    "text": "Whether to close the dialog when the escape key is pressed",
                    "tags": [
                        {
                            "name": "default",
                            "value": "true"
                        }
                    ]
                }
            },
            {
                "name": "role",
                "type": "\"dialog\" | \"alertdialog\"",
                "typeKind": "primitive",
                "required": false,
                "documentation": {
                    "text": "The dialog's role",
                    "tags": [
                        {
                            "name": "default",
                            "value": "\"dialog\""
                        }
                    ]
                }
            },
            {
                "name": "onEscapeKeyDown",
                "type": "(event: KeyboardEvent) => void",
                "typeKind": "function",
                "required": false,
                "documentation": {
                    "text": "Function called when the escape key is pressed",
                    "tags": []
                }
            },
            {
                "name": "persistentElements",
                "type": "(() => Element)[]",
                "typeKind": "array",
                "required": false,
                "documentation": {
                    "text": "Returns the persistent elements that:\n- should not have pointer-events disabled\n- should not trigger the dismiss event",
                    "tags": []
                }
            }
        ]
    }
]