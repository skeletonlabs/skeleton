---
interface Props {
	isComponent?: boolean;
	label?: string;
	descriptor?: string;
	tag?: string;
}

const { isComponent, label, descriptor, tag } = Astro.props;

const labelFallback = '(unlabeled)';
const tagFallback = 'div';
---

<div class="card flex-1 bg-surface-50-950 preset-outlined-surface-600-400 border-dashed p-3 space-y-3">
	<header class="flex justify-between items-center gap-2 pointer-events-none">
		<div class="flex items-center gap-2">
			<!-- Label -->
			<code class:list={label ? 'code' : 'text-xs opacity-60'}>
				{isComponent ? `<${label ?? labelFallback}>` : (label ?? labelFallback)}
			</code>
			<!-- Descriptor -->
			{descriptor && <span class="text-xs opacity-60">{descriptor}</span>}
		</div>
		<!-- Element -->
		<span class="font-mono text-xs opacity-60">{`<${tag ?? tagFallback}>`}</span>
	</header>
	<!-- Default Slot -->
	{
		Astro.slots.has('default') && (
			<div class="space-y-3">
				<slot />
			</div>
		)
	}
</div>

<style lang="postcss">
	.card:hover:not(:has(*:hover)) {
		background-color: var(--color-surface-100-900);
		border-color: var(--color-primary-950-50);
		border-style: solid;
	}
</style>
