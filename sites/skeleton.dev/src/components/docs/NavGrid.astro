---
import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';

interface Props {
	collection: 'docs';
	path: string;
	classes: string;
}

const { collection, path, classes } = Astro.props;

// Get collection, filter by path
const collectionItems = await getCollection(collection, (item) => {
	if (item.filePath?.includes(path) && !item.id.endsWith('meta.mdx')) {return item;}
});

// Sort Order
const sortByOrder = (a: CollectionEntry<'docs'>, b: CollectionEntry<'docs'>) => {
	return a.data.order - b.data.order;
};
---

<nav class="grid grid-cols-1 gap-4" class:list={classes}>
	{
		collectionItems.sort(sortByOrder).map((item) => (
			<>
				<a
					href={`/${collection}/${item.id}`}
					class="card bg-surface-50-950 border-[1px] border-surface-200-800 hover:preset-tonal space-y-2 p-4 md:p-8"
				>
					<h3 class="h5">{item.data.title}</h3>
					<p class="opacity-60">{item.data.description}</p>
				</a>
			</>
		))
	}
</nav>
