---
const base = '/docs';
const path = Astro.url.pathname.replace(`${base}/`, '');
const segments = path.split('/').filter(Boolean);

const crumbs = segments.map((segment, i) => {
	const isFirst = i === 0;
	const isLast = i === segments.length - 1;

	return {
		label: segment.replace(/-/g, ' '),
		href: !isFirst && !isLast ? `${base}/${segments.slice(0, i + 1).join('/')}` : undefined,
		isLast,
	};
});
---

<ol class="flex flex-wrap gap-2 text-xs">
	{
		crumbs.map(({ label, href, isLast }, i) => (
			<>
				<li class:list={{ capitalize: true, 'opacity-60': isLast }}>
					{href ? (
						<a href={href} class="hover:underline">
							{label}
						</a>
					) : (
						label
					)}
				</li>
				{i < crumbs.length - 1 && <li class="opacity-60">â€º</li>}
			</>
		))
	}
</ol>
