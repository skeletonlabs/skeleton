---
import { getEntry } from 'astro:content';
import Code from '@/components/ui/code.svelte';
import { getActiveFramework } from '@/modules/framework';

interface Props {
	component: string;
	framework: string;
}

const framework = Astro.props.framework ?? getActiveFramework(Astro).id;
const component = Astro.props.component ?? Astro.url.pathname.split('/').filter(Boolean).pop();

const types = await getEntry('types', `${framework}/${component}`);

function kebabToPascal(str: string) {
	return str
		.split('-')
		.map((part) => part.charAt(0).toUpperCase() + part.slice(1))
		.join('');
}

if (!types && import.meta.env.PROD) {
	throw new Error(`Unable to auto detect types for ${framework}/${component}`);
}
---

<div>
	{
		!types ? (
			<p class="italic text-sm opacity-50">
				Unable to load auto detect types for {framework}/{component}
			</p>
		) : (
			<section class="grid gap-4">
				{types.data.types.map((type) => (
					<>
						<h3 class="h3">{type.name.replace(kebabToPascal(component), '').replace('Props', '')}</h3>
						{type.metadata.classValue && type.metadata.classValue !== "''" && <Code code={type.metadata.classValue} client:visible />}
						<div class="table-wrap card border border-surface-200-800 rounded-container">
							<table class="table">
								<thead class="bg-surface-100-900/50">
									<tr>
										<th>Prop</th>
										<th>Default</th>
										<th>Type</th>
									</tr>
								</thead>
								<tbody class="[&>tr]:hover:preset-tonal">
									{type.props.map((property) => (
										<tr class="align-top text-xs">
											<td>
												<code class="code">{property.name}</code>
											</td>
											<td>
												{property.JSDoc && property.JSDoc.tags.some((tag) => tag.name === 'default') ? (
													<span class="whitespace-nowrap">{property.JSDoc.tags.find((tag) => tag.name === 'default')?.value}</span>
												) : (
													<span class="opacity-50">&mdash;</span>
												)}
											</td>
											<td class="flex flex-col items-start gap-2">
												<span class="badge preset-tonal whitespace-pre-wrap">{property.type}</span>
												<p>{property.JSDoc.description}</p>
											</td>
										</tr>
									))}
								</tbody>
							</table>
						</div>
					</>
				))}
			</section>
		)
	}
</div>
