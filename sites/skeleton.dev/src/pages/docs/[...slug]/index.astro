---
import LayoutRoot from '@layouts/LayoutRoot.astro';
import type { GetStaticPaths } from 'astro';
import { render } from 'astro:content';
import { getCollection, getEntry } from 'astro:content';

export const getStaticPaths = (async () => {
	const pages = await getCollection('docs');
	return pages.map((page) => ({
		params: {
			slug: page.id
		},
		props: {
			page: page
		}
	}));
}) satisfies GetStaticPaths;

const { page } = Astro.props;
const { Content, remarkPluginFrontmatter } = await render(page);

let meta: Awaited<ReturnType<typeof getEntry>>;
if (['components/', 'components-composed/', 'integrations/'].some((id) => page.id.startsWith(id))) {
	meta = await getEntry('docs', page.id.replace(/\/[^/]*$/, '/meta'));
	if (meta !== undefined) {
		Object.assign(remarkPluginFrontmatter, meta.data);
	}
}
---

<LayoutRoot title={meta ? meta.data.title : page.data.title} description={meta ? meta.data.title : page.data.description}>
	<Content />
</LayoutRoot>
