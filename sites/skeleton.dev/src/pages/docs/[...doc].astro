---
import { getEntry, render } from 'astro:content';
import Layout from '@/components/ui/layout.astro';
import { components } from '@/components/typography';
import H1 from '@/components/typography/h1.astro';
import Header from '@/components/ui/header.astro';
import Footer from '@/components/ui/footer.astro';
import Navigation from '@/components/ui/navigation.astro';
import Alert from '@/components/ui/alert.astro';
import TableOfContents from '@/components/ui/table-of-contents.astro';
import Advertisement from '@/components/ui/advertisement.astro';
import Breadcrumbs from '@/components/ui/breadcrumbs.astro';

if (!Astro.params.doc) {
	return Astro.redirect('/404');
}

const doc = await getEntry('docs', Astro.params.doc);

if (!doc) {
	return Astro.redirect('/404');
}

const { Content, headings } = await render(doc);
---

<Layout title={doc.data.title} description={doc.data.description}>
	<Header />
	<div class="container mx-auto grid grid-cols-1 xl:grid-cols-[240px_minmax(0px,_1fr)_280px] px-4 xl:px-10">
		<aside
			class="hidden xl:block self-start sticky top-(--header-height) h-[calc(100vh-var(--header-height))] py-4 xl:py-10 overflow-y-auto pr-10"
			data-navigation
		>
			<Navigation />
			<script>
				const NAVIGATION_SCROLL_TOP_KEY = 'navigation-scroll-top';

				document.addEventListener('astro:page-load', () => {
					const navigation = document.querySelector<HTMLElement>('[data-navigation]');
					if (!navigation) {
						throw new Error('Navigation element not found');
					}
					navigation.addEventListener('scroll', () => {
						localStorage.setItem(NAVIGATION_SCROLL_TOP_KEY, navigation.scrollTop.toString());
					});
					const storedScrollTop = localStorage.getItem(NAVIGATION_SCROLL_TOP_KEY);
					if (!storedScrollTop) {
						return;
					}
					navigation.scrollTop = storedScrollTop ? parseInt(storedScrollTop) : 0;
				});
			</script>
		</aside>
		<main class="px-4 xl:px-10 py-10 space-y-8">
			<header class="scroll-header space-y-4" data-pagefind-body id="_top">
				<Breadcrumbs />
				<H1>{doc.data.title}</H1>
				<p class="text-lg opacity-60">{doc.data.description}</p>
			</header>
			{
				doc.data.stability !== 'stable' && (
					<Alert type="warning">
						This feature is currently marked as {doc.data.stability} and not intended for production use. It may receive breaking changes
						before its stable release.
					</Alert>
				)
			}
			<article class="grid gap-8">
				<Content components={components} />
			</article>
			<Footer class="p-4 xl:px-0" />
		</main>
		<aside class="hidden xl:block self-start sticky top-[70px] h-[calc(100vh-70px)] py-4 xl:py-10 space-y-8 overflow-y-auto">
			<Advertisement />
			<TableOfContents {headings} />
		</aside>
	</div>
</Layout>
